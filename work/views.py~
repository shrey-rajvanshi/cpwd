# Create your views here.
from django.contrib.auth.decorators import login_required
from django.http import HttpResponseRedirect, HttpResponse
from django.shortcuts import render
from django.shortcuts import render_to_response
from home.models import *
from work.models import *
from work.forms import *

@login_required
def search(request):
    tabs = Tab.objects.all()
    alerts = Alert.objects.all()
    if request.POST:
        form = Searchform(request.POST)
        if form.is_valid():
            pr_name = request.POST.get('project_name','')
            #pr_code = request.POST.get('pr_code',0)
            pr_agency = request.POST.get('project_agency','')
            work_list=searchinwork(pr_name,pr_agency)
            return render(request,"results.html",{'list':work_list,'tabs':tabs,'name':pr_name,'agency':pr_agency,'alerts':alerts})
    else:
        form = Searchform
    return render(request,'search.html',{'form':form,'tabs':tabs,'alerts':alerts})

def searchinwork(par_name,par_agency):
    list = Work.objects.filter(name__icontains = par_name,agency__icontains = par_agency)
    return list

@login_required
def draw(request):
    tabs = Tab.objects.all()
    alerts = Alert.objects.all()


    #
    """


    if request.POST:
        form = Searchform(request.POST)
        if form.is_valid():
            pr_name = request.POST.get('project_name','')
            #pr_code = request.POST.get('pr_code',0)
            pr_agency = request.POST.get('project_agency','')
            work_list=searchinwork(pr_name,pr_agency)
            return render(request,"results.html",{'list':work_list,'tabs':tabs,'name':pr_name,'agency':pr_agency,'alerts':alerts})
    else:
        form = Searchform
    return render(request,'search.html',{'form':form,'tabs':tabs,'alerts':alerts})
    """
    if request.method == 'POST':
        form = DocumentForm(request.POST, request.FILES)
        if form.is_valid():
            newdoc = Document(docfile = request.FILES['docfile'])
            newdoc.save()

            # Redirect to the document list after POST
            #return HttpResponseRedirect(reverse('myproject.myapp.views.list'))
	    return HttpResponseRedirect('')
    else:
        form = DocumentForm() # A empty, unbound form

    # Load documents for the list page
    documents = Document.objects.all()

    # Render list page with the documents and the form
    return render_to_response(
        'drawings.html',
        {'documents': documents, 'form': form},
        context_instance=RequestContext(request)
    )


@login_required
def add(request):
    tabs = Tab.objects.all()
    alerts = Alert.objects.all()
    if request.POST:
        form = Addworkform(request.POST)
        if form.is_valid():
            work = form.save()
            status(work)
            work.save()
            return render(request,'addwork.html',{'message':'work added successfully','tabs':tabs,'form':form,'alerts':alerts})
        else:
            return render(request,'addwork.html',{'message':'There was an error in you request','tabs':tabs,'form':form,'alerts':alerts})
    else:
        form = Addworkform()
        return render(request,'addwork.html',{'form':form,'tabs':tabs,'alerts':alerts})
@login_required
def all(request):
    tabs=Tab.objects.all()
    alerts = Alert.objects.all()
    list = Work.objects.all()
    return render(request,"results.html",{'list':list,'tabs':tabs,'alerts':alerts})
@login_required
def edit(request,id):
    work = Work.objects.get(pk=id)
    alerts = Alert.objects.all()
    tabs = Tab.objects.all()
    if request.POST:
        form = Addworkform(request.POST)
        if form.is_valid():
            data=form.cleaned_data
            work = Work.objects.get(id=id)
            work.delete()
            work=form.save()
            status(work)
            work.save()
            return render(request,'addwork.html',{'work':work,'message':'work edited successfully','tabs':tabs,'form':form,'alerts':alerts})
        else:
            return render(request,'addwork.html',{'work':work,'message':'There was an error in you request','tabs':tabs,'form':form,'alerts':alerts})
    else:
        form = Addworkform(instance =work)
        return render(request,'addwork.html',{'work':work,'form':form,'tabs':tabs,'alerts':alerts})

@login_required
def xls(request):
    book= open("C:\Users\shrey\Downloads\PycharmProjects\cpwd\media\PE,TS,NIT,Agmt. Details.xls")
    response = HttpResponse(book,mimetype='application/vnd.ms-excel')
    response['Content-Disposition'] = 'attachment; filename=CPWDdetails.xls'
    return response

def status(work):
    if work.progress is 100:
        work.status = 5
    elif work.nit:
        work.status = 4
    elif work.ts_detail:
        work.status = 3
    elif work.pe_det:
        work.status = 2
    else:
        work.status = 1

def showwork(request,id):
    work = Work.objects.get(id=id)
    alerts = Alert.objects.all()
    return render(request,'project_view.html',{'work':work,'alerts':alerts})
